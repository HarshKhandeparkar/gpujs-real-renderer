!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?s(exports):"function"==typeof define&&define.amd?define(["exports"],s):s((t=t||self).GPUjsRealRenderer={})}(this,(function(t){"use strict";var s=function(t,s){return t.createKernel((function(t){const s=t[this.thread.y][this.thread.x];this.color(s[0],s[1],s[2])}),{output:s,graphical:!0})};var e=function(t,s,e,i,r,h){return t.createKernel((function(){const t=this.output.x,s=this.output.y,e=Math.floor(s*(this.constants.xOffset/100)),i=Math.floor(t*(this.constants.yOffset/100));return this.thread.x===i||this.thread.y===e?this.constants.axesColor:this.constants.bgColor}),{output:s,pipeline:!0,constants:{xOffset:e,yOffset:i,bgColor:r,axesColor:h},constantTypes:{bgColor:"Array(3)",axesColor:"Array(3)",xOffset:"Float",yOffset:"Float"}})};var i=function(t,s){return t.createKernel((function(t){return t[this.thread.y][this.thread.x]}),{output:s,pipeline:!0})};var r=class{constructor(t){if(this.canvasTag=t.canvasTag,this.dimensions=t.dimensions||{x:1e3,y:1e3},this.xScaleFactor=t.xScaleFactor||10,this.yScaleFactor=t.yScaleFactor||1,this.bgColor=t.bgColor||[0,0,0],this.axesColor=t.axesColor||[1,1,1],this.drawsPerFrame=t.drawsPerFrame||1,this.timeStep=t.timeStep||1/60,this.time=t.initTime||0,this.xOffset=t.xOffset,this.yOffset=t.yOffset,t.GPU=t.GPU||window.GPU,"number"!=typeof this.xOffset&&(this.xOffset=50),"number"!=typeof this.yOffset&&(this.yOffset=50),this.xOffset=Math.max(0,Math.min(100,this.xOffset)),this.yOffset=Math.max(0,Math.min(100,this.yOffset)),void 0===document.getElementById(this.canvasTag))throw"No Canvas Element Found";this._canvas=document.getElementById(this.canvasTag),this.gpu=new t.GPU({canvas:this._canvas,mode:"gpu",tactic:"precision"}),this._blankGraph=e(this.gpu,this.dimensions,this.xOffset,this.yOffset,this.bgColor,this.axesColor),this._cloneTexture=i(this.gpu,this.dimensions),this.graphPixels=this._blankGraph(),this._display=s(this.gpu,this.dimensions),this._doRender=!1}_drawFunc(t){return t}_overlayFunc(t){return t}_draw(){return this.time+=this.timeStep,this.graphPixels=this._drawFunc(this.graphPixels,this.time),this.graphPixels}draw(t=1){for(let s=0;s<t;s++)this._draw();return this._display(this._overlayFunc(this.graphPixels)),this}_render(){this._doRender&&(this.draw(this.drawsPerFrame),window.requestAnimationFrame(()=>{this._render()}))}startRender(){if(!this._doRender)return this._doRender=!0,this._render(),this}stopRender(){return this._doRender=!1,this}toggleRender(){return this._doRender=!this._doRender,this._doRender&&this._render(),this}resetTime(){return this.time=0,this}reset(){return this.graphPixels=this._blankGraph(),this.resetTime(),this._display(this.graphPixels),this}};var h=function(t,s,e,i,r,h,a){return t.createKernel((function(t,s){const e=this.output.x,i=this.output.y;if(this.thread.x*Math.abs(this.constants.progressiveAxis-1)>=e-s||this.thread.y*this.constants.progressiveAxis>=i+s){const t=Math.floor(i*(this.constants.xOffset/100)),s=Math.floor(e*(this.constants.yOffset/100));return this.thread.x===s||this.thread.y===t?this.constants.axesColor:this.constants.bgColor}return t[this.thread.y+s*this.constants.progressiveAxis][this.thread.x+s*Math.abs(this.constants.progressiveAxis-1)]}),{output:s,pipeline:!0,constants:{progressiveAxis:"y"==e?1:0,xOffset:i,yOffset:r,axesColor:h,bgColor:a},constantTypes:{progressiveAxis:"Integer",xOffset:"Float",yOffset:"Float",axesColor:"Array(3)",bgColor:"Array(3)"}})};var a=function(t,s,e,i,r,h,a,o,n,c,l){return t.createKernel((function(t,s,e,i,r){const h=this.thread.x+r*Math.abs(this.constants.progressiveAxis-1),a=this.thread.y+r*this.constants.progressiveAxis,o=s[0],n=i[0],c=this.output.x,l=this.output.y,u=h/this.constants.xScaleFactor-c*(this.constants.yOffset/100)/this.constants.xScaleFactor,x=a/this.constants.yScaleFactor-l*(this.constants.xOffset/100)/this.constants.yScaleFactor,f=(u-e)*this.constants.xScaleFactor,p=(x-o)*this.constants.yScaleFactor,d=Math.sqrt(f*f+p*p);let y=u*(o-n)-x-e*(o-n)+o,m=Math.abs(y)/Math.sqrt((o-n)*(o-n)+1);return d<=this.constants.brushSize?this.constants.brushColor:m<=this.constants.lineThickness&&u<=e&&u>=e-1&&x<=Math.max(o,n)&&x>=Math.min(o,n)?this.constants.lineColor:t[this.thread.y][this.thread.x]}),{output:s,pipeline:!0,constants:{brushSize:e,brushColor:i,lineThickness:n,lineColor:c,xScaleFactor:r,yScaleFactor:h,xOffset:a,yOffset:o,progressiveAxis:"y"==l?1:0},constantTypes:{brushColor:"Array(3)",brushSize:"Float",lineThickness:"Float",lineColor:"Array(3)",xScaleFactor:"Float",yScaleFactor:"Float",xOffset:"Float",yOffset:"Float",progressiveAxis:"Integer"}})};var o=class extends r{constructor(t){super(t),this.progressiveAxis=t.progressiveAxis||"x",this.progressiveAxis=this.progressiveAxis.toLowerCase(),this.progressionMode=t.progressionMode||"overflow",this.progressInterval=t.progressInterval||1,this.brushSize=t.brushSize||1,this.brushColor=t.brushColor||[1,1,1],this.lineThickness=t.lineThickness||.05,this.lineColor=t.lineColor||[0,.5,0],this._progressGraph=h(this.gpu,this.dimensions,this.progressiveAxis,this.xOffset,this.yOffset,this.axesColor,this.bgColor),this._lastProgress=0,this._numProgress=0,this._dataIndex=1,this._lastData=[0],this._addData=a(this.gpu,this.dimensions,this.brushSize,this.brushColor,this.xScaleFactor,this.yScaleFactor,this.xOffset,this.yOffset,this.lineThickness,this.lineColor,this.progressiveAxis),this.limits={x:[0-this.yOffset/100*(this.dimensions[0]/this.xScaleFactor),this.dimensions[0]/this.xScaleFactor-this.yOffset/100*(this.dimensions[0]/this.xScaleFactor)],y:[0-this.xOffset/100*(this.dimensions[1]/this.yScaleFactor),this.dimensions[1]/this.yScaleFactor-this.xOffset/100*(this.dimensions[1]/this.yScaleFactor)]}}addData(t){if(isNaN(parseFloat(t))){if(!t.texture)throw"Input invalid."}else t=[parseFloat(t)];if(console.log(t,this._lastData),this.graphPixels=this._addData(this._cloneTexture(this.graphPixels),t,this._dataIndex++,this._lastData,this._numProgress),this._lastData=t,this._dataIndex>=this.limits.x[1]&&"continous"!=this.progressionMode){let t=Math.ceil("y"==this.progressiveAxis?this.yScaleFactor:this.xScaleFactor);this.graphPixels=this._progressGraph(this._cloneTexture(this.graphPixels),t),this._numProgress+=t,"y"==this.progressiveAxis?(this.limits.y[0]+=t/this.yScaleFactor,this.limits.y[1]+=t/this.yScaleFactor):(this.limits.x[1]+=t/this.xScaleFactor,this.limits.x[0]+=t/this.xScaleFactor)}return this._display(this.graphPixels),this}_drawFunc(t,s){return"continous"==this.progressionMode&&s-this._lastProgress>=this.progressInterval?(this._lastProgress=s,this._numProgress++,"y"==this.progressiveAxis?(this.limits.y[0]+=1/this.yScaleFactor,this.limits.y[1]+=1/this.yScaleFactor):(this.limits.x[0]+=1/this.xScaleFactor,this.limits.x[1]+=1/this.xScaleFactor),this._progressGraph(this._cloneTexture(t),1)):t}getLimits(){return this.limits}reset(){return super.reset(),this._dataIndex=1,this._lastData=0,this._lastProgress=0,this._numProgress=0,this.limits={x:[0-this.yOffset/100*(this.dimensions[0]/this.xScaleFactor),this.dimensions[0]/this.xScaleFactor-this.yOffset/100*(this.dimensions[0]/this.xScaleFactor)],y:[0-this.xOffset/100*(this.dimensions[1]/this.yScaleFactor),this.dimensions[1]/this.yScaleFactor-this.xOffset/100*(this.dimensions[1]/this.yScaleFactor)]},this}};var n=function(t,s,e,i,r,h,a,o){return t.createKernel((function(t,s,e){const i=this.thread.x,r=this.thread.y,h=this.output.x,a=this.output.y,o=i/this.constants.xScaleFactor-h*(this.constants.yOffset/100)/this.constants.xScaleFactor,n=r/this.constants.yScaleFactor-a*(this.constants.xOffset/100)/this.constants.yScaleFactor,c=(o-s)*this.constants.xScaleFactor,l=(n-e)*this.constants.yScaleFactor;return Math.sqrt(c*c+l*l)<=this.constants.brushSize?this.constants.brushColor:t[this.thread.y][this.thread.x]}),{output:s,pipeline:!0,constants:{brushSize:e,brushColor:i,xScaleFactor:r,yScaleFactor:h,xOffset:a,yOffset:o},constantTypes:{brushColor:"Array(3)",brushSize:"Float",xScaleFactor:"Float",yScaleFactor:"Float",xOffset:"Float",yOffset:"Float"}})};var c=function(t,s,e,i,r,h,a,o){return t.createKernel((function(t,s,e){const i=this.thread.x,r=this.thread.y,h=s[0],a=s[1],o=e[0],n=e[1],c=this.output.x,l=this.output.y,u=i/this.constants.xScaleFactor-c*(this.constants.yOffset/100)/this.constants.xScaleFactor,x=r/this.constants.yScaleFactor-l*(this.constants.xOffset/100)/this.constants.yScaleFactor;let f=u*(a-n)-h*(a-n)-x*(h-o)+a*(h-o);return Math.abs(f)/Math.sqrt((a-n)*(a-n)+(h-o)*(h-o))<=this.constants.lineThickness&&u<=Math.max(h,o)&&u>=Math.min(h,o)&&x<=Math.max(a,n)&&x>=Math.min(a,n)?this.constants.lineColor:t[this.thread.y][this.thread.x]}),{output:s,pipeline:!0,constants:{lineThickness:a,lineColor:o,xScaleFactor:e,yScaleFactor:i,xOffset:r,yOffset:h},constantTypes:{lineThickness:"Float",lineColor:"Array(3)",xScaleFactor:"Float",yScaleFactor:"Float",xOffset:"Float",yOffset:"Float"}})};var l={convertPolarCartesian:function(t,s){return[t*Math.cos(s),t*Math.sin(s)]},convertCartesianPolar:function(t,s){return[Math.sqrt(t*t+s*s),Math.atan2(s,t)]}};const{convertCartesianPolar:u,convertPolarCartesian:x}=l;var f=class{constructor(t,s){return this.r=t,this.theta=s,this.x=x(this.r,this.theta)[0],this.y=x(this.r,this.theta)[1],this.convertCartesianPolar=u,this.convertPolarCartesian=x,this}getCartesianForm(){return[this.x,this.y]}getPolarForm(){return[this.r,this.theta]}add(t){return this.x+=t.x,this.y+=t.y,this.r=u(this.x,this.y)[0],this.theta=u(this.x,this.y)[1],this}subtract(t){return this.x-=t.x,this.y-=t.y,this.r=u(this.x,this.y)[0],this.theta=u(this.x,this.y)[1],this}multiply(t){return this.r*=t.r,this.theta+=t.theta,this.x=x(this.r,this.theta)[0],this.y=x(this.r,this.theta)[1],this}divide(t){return this.r/=t.r,this.theta-=t.theta,this.x=x(this.r,this.theta)[0],this.y=x(this.r,this.theta)[1],this}conjugate(){return this.theta*=-1,this.x=x(this.r,this.theta)[0],this.y=x(this.r,this.theta)[1],this}reciprocal(){return this.r=1/this.r,this.theta*=-1,this.x=x(this.r,this.theta)[0],this.y=x(this.r,this.theta)[1],this}};var p={RealRenderer:r,RealLineGraph:o,RealComplexSpace:class extends r{constructor(t){super(t),this.brushSize=t.brushSize||1,this.brushColor=t.brushColor||[1,1,1],this.changeNumbers=t.changeNumbers||function(t,s){return t},this.lineThickness=t.lineThickness||.5,this.lineColor=t.lineColor||[1,1,1],this.watchedNumbers={},this._plotComplex=n(this.gpu,this.dimensions,this.brushSize,this.brushColor,this.xScaleFactor,this.yScaleFactor,this.xOffset,this.yOffset),this._plotComplexPersistent=n(this.gpu,this.dimensions,this.brushSize,this.brushColor,this.xScaleFactor,this.yScaleFactor,this.xOffset,this.yOffset),this.Complex=f,this.interpolate=c(this.gpu,this.dimensions,this.xScaleFactor,this.yScaleFactor,this.xOffset,this.yOffset,this.lineThickness,this.lineColor)}watch(t,s,e=!0,i=!0,r=!1,h=null,a={}){return this.watchedNumbers[t]={number:s,show:e,persistent:i,interpolate:r,interpolateTo:h,attributes:a},this}clearWatched(){return this.watchedNumbers={},this}_interpolate(t,s,e){return t=this.interpolate(this._cloneTexture(t),[s.x,s.y],[e.x,e.y])}_overlayFunc(t){for(let s in this.watchedNumbers)!this.watchedNumbers[s].persistent&&this.watchedNumbers[s].show&&(t=this._plot(t,this.watchedNumbers[s].number)),this.watchedNumbers[s].interpolate&&(t=this._interpolate(t,this.watchedNumbers[s].number,this.watchedNumbers[s].interpolateTo));return t}_drawFunc(t,s){this.watchedNumbers=this.changeNumbers(this.watchedNumbers,s,this.timeStep);for(let s in this.watchedNumbers)this.watchedNumbers[s].persistent&&this.watchedNumbers[s].show&&(t=this._plotPersistent(t,this.watchedNumbers[s].number));return t}_plot(t,s){return this._plotComplex(this._cloneTexture(t),s.x,s.y)}_plotPersistent(t,s){return this._plotComplexPersistent(this._cloneTexture(t),s.x,s.y)}plot(t){return this._persistentGraphPixels=this._plot(this._persistentGraphPixels,t),this.graphPixels=this._cloneTexture(this._persistentGraphPixels),this._display(this.graphPixels),this}}},d=p.RealRenderer,y=p.RealLineGraph,m=p.RealComplexSpace;t.RealComplexSpace=m,t.RealLineGraph=y,t.RealRenderer=d,t.default=p,Object.defineProperty(t,"__esModule",{value:!0})}));
